//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace YiFramework.DBModel
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class YiFrameworkEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“YiFrameworkEntities”部分中的连接字符串初始化新 YiFrameworkEntities 对象。
        /// </summary>
        public YiFrameworkEntities() : base("name=YiFrameworkEntities", "YiFrameworkEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 YiFrameworkEntities 对象。
        /// </summary>
        public YiFrameworkEntities(string connectionString) : base(connectionString, "YiFrameworkEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 YiFrameworkEntities 对象。
        /// </summary>
        public YiFrameworkEntities(EntityConnection connection) : base(connection, "YiFrameworkEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<T_SYS_USER> T_SYS_USER
        {
            get
            {
                if ((_T_SYS_USER == null))
                {
                    _T_SYS_USER = base.CreateObjectSet<T_SYS_USER>("T_SYS_USER");
                }
                return _T_SYS_USER;
            }
        }
        private ObjectSet<T_SYS_USER> _T_SYS_USER;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 T_SYS_USER EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_SYS_USER(T_SYS_USER t_SYS_USER)
        {
            base.AddObject("T_SYS_USER", t_SYS_USER);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YiFrameworkModel", Name="T_SYS_USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_SYS_USER : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 T_SYS_USER 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="displayName">DisplayName 属性的初始值。</param>
        /// <param name="loginName">LoginName 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        public static T_SYS_USER CreateT_SYS_USER(global::System.String id, global::System.String displayName, global::System.String loginName, global::System.DateTime createTime)
        {
            T_SYS_USER t_SYS_USER = new T_SYS_USER();
            t_SYS_USER.ID = id;
            t_SYS_USER.DisplayName = displayName;
            t_SYS_USER.LoginName = loginName;
            t_SYS_USER.CreateTime = createTime;
            return t_SYS_USER;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, false, "LoginName");
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginPass
        {
            get
            {
                return _LoginPass;
            }
            set
            {
                OnLoginPassChanging(value);
                ReportPropertyChanging("LoginPass");
                _LoginPass = StructuralObject.SetValidValue(value, true, "LoginPass");
                ReportPropertyChanged("LoginPass");
                OnLoginPassChanged();
            }
        }
        private global::System.String _LoginPass;
        partial void OnLoginPassChanging(global::System.String value);
        partial void OnLoginPassChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value, "CreateTime");
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();

        #endregion

    }

    #endregion

}
